#! /usr/bin/env perl

use strict;
use warnings;

use Cwd qw(getcwd);
use Encode;
use File::Slurp;
use File::stat;
use open ':encoding(utf8)';
use open ':std';
use POSIX qw(strftime);
use utf8;
use YAML::Safe;


my $src = 'pg1581';
my $should_cwd = "src/$src";
my $usage = "Usage: ./bin/process_$src\n";
my $out_dir = './out';
my $etc_dir = './etc';
my $in_file = "./downloaded/$src-images.html.utf8";


print "CWD: ". getcwd() ."\n";
die "Not in directory $should_cwd\n$usage" if getcwd() !~ m{/$should_cwd$};
die "No such file: $in_file\n$usage" if ! -f $in_file;
die "No such directory: $out_dir\n$usage" if ! -d $out_dir;
die "No such directory: $etc_dir\n$usage" if ! -d $etc_dir;

my $tag_map = YAML::Safe::LoadFile("$etc_dir/src_pg1581.yaml");

sub rom_to_dec {
    my ($in) = @_;

    my %rom_to_dec = (
        'I' => 1,
        'II' => 2,
        'III' => 3,
        'IIII' => 4,
        'V' => 5,
        'VI' => 6,
        'VII' => 7,
        'VIII' => 8,
        'IX' => 9,
        'X' => 10,
        'XI' => 11,
        'XII' => 12,
        'XIII' => 13,
        'XIIII' => 14,
        'XV' => 15,
        'XVI' => 16,
    );

    return $rom_to_dec{$in};
}

my $level = 0;

my $bump_hnum=0;

my $out_file = '';
my $book_id = '';
my $chap_num = '';
my $verse_num = 0;
my $state = '';
my $download_info={src => $src, src_file => $in_file};

my $stat = stat($in_file) or die "Can't read $in_file: $!";
$download_info->{'src_file_mtime'} = $stat->mtime;
$download_info->{'src_file_mtime_iso8601'} = strftime('%Y-%m-%dT%H:%M:%SZ', gmtime($stat->mtime));


my @lines = (read_file($in_file, { binmode => ':utf8' }));
print "LINES: $#lines\n";


my $out = {download_info => $download_info};
my $line_no = 0;
while (my $line = shift(@lines)) {
    $line_no++;

    $line =~ s{<p class="expl">(The words of Job are ended.)</p>}{<p>($1)</p>};
    $line =~ s{<p class="expl">(Psalm 10 according to the Hebrews.)</p>}{<p>($1)</p>};
    $line =~ s{<p class="expl">(THE PARABLES OF SOLOMON)</p>}{<comment_before_chapter>$1</p>};
    $line =~ s{<p class="expl">(THE PRAYER OF JEREMIAS THE PROPHET)</p>}{<comment_before_chapter>$1</p>};
    $line =~ s{<p class="expl">(THE PROLOGUE)\.</p>}{<prolog_header>$1</p>};
    $line =~ s{<p class="expl">(The knowledge of many and great things hath been shewn.+)</p>}{<prolog>$1</p>};
    $line =~ s{<p class="expl">(A copy of the epistle that Jeremias sent to.+)</p>}{<chapter_note>$1</p>};
 

    if (defined($out->{book_id}) && $out->{book_id} eq 'PRO' && $chap_num == 12) {
        # combine 2 lines into one with a linebreak marker ('/')
        if ($line =~ /12:11. /) {
            my $next = shift(@lines);
            $line_no++;
            $line =~ s/<\/p>/\//; # '/' for linebreak
            $next =~ s/^\s*<p>12:12\. / /;
            $line .= "$next"; 
        }
    }

    $line_no++;
    $line =~ s/\s+$//;
    $bump_hnum = -1 if $line =~ m{id="ADDITIONAL_BOOKS"};

    last if $line =~ /FINIS\./;
    next if $line =~ /<hr class="chap x-ebookmaker-drop">/;
    next if $line =~ m{^\s*</div>\s*$};
    next if $line =~ /^<div[ >]/;
    next if $line =~ /^<meta /;
    next if $line =~ /^<link /;
    next if $line =~ /^<br>/;
    next if $line =~ /^<hr>/;


    if ($bump_hnum) {
        $line =~ s/<h(\d)/"<h". ($1 + $bump_hnum)/e;
    }

    if ($line =~ m{^<style>}) {
        $state = 'in_style';
        next;
    } elsif ($state eq 'in_style') {
        $state = '' if $line =~ m{^</style>};
        next;
    } elsif ($line =~ m{^<section class="pg-boilerplate pgheader"}) {
        $state='in_pgheader';
        next;
    } elsif ($state eq 'in_pgheader') {
        if ($line =~ m{</section>}) {
            $state = '';
            next;
        }
        $line =~ s{<[^>]+>}{}g;

        if (my($key,$val) = split(/:\s*/, $line, 2)) {
            next unless $val;
            $download_info->{$key} = $val;
        }
        next;
    } elsif ($line =~ m{<h3 class="nobreak" id="(\w+)">([^<]+)</h\d}) {
        if ($out->{book_id}) {
            print_book_file();
            $out = {download_info => $download_info};
        }
        my ($new_book_tag, $new_book_title) = ($1, $2);

        $out->{book_id} = $tag_map->{$new_book_tag}->{USFM_ID};
        $out->{book_tag} = $new_book_tag;
        $out->{book_title} = $new_book_title;

        print "BOOK: $out->{book_id} ($out->{book_title})\n";
        $state = 'in_book';
        next;
    } elsif ($line =~ m{<h4>([^<]+)</h\d>}) {
        my $tmp = $1;
        if ($tmp eq 'PREFACE') {
            $chap_num = 0;
        } elsif ($tmp =~ m{([\w ]+) Chapter (\d+)$}) {
            $chap_num = $2;
        } elsif ($tmp =~ m{^CHAP\. ([IVX]+)\.$}) {
            $chap_num = rom_to_dec($1);
        } else {
            die "ODD: $tmp\n";
        }
        $out->{chapter}->[$chap_num]->{chapter_number} = $chap_num;
        $verse_num = 0;
        $state = 'in_chapter';
    } elsif ($line =~ m{<p class="sp2">([^<]+)</p>}) {
        my $text = $1;
        if ($out->{book_id} eq 'MAN') {
            $text =~ s/\s+\[(\d+)\]\s+/|$1 /g;
            $verse_num = 0;
            $chap_num = 1;
            for my $verse (split(/\|/, $text)) {
                my $sep = $&;
                $verse_num++;
                if ($verse =~ s/^$verse_num // || $verse_num == 1) {
                    out_verse($chap_num,$verse_num, $verse);
                } else {
                    die "Mismatch $verse_num !~ $verse, Stopped ";
                }
            }
        } elsif ($state eq 'in_book') {
            $out->{book_intro} = $text;
        } elsif ($state eq 'in_chapter') {
            $out->{chapter}->[$chap_num]->{chapter_intro} = $text;
        } else {
            print "  "x($level + 2) ."$line\n";
        }
    } elsif ($line =~ m{<p>(\d+):(\d+)\. ?([^<]+)</p>}) {
        my ($c, $v, $text) = ($1, $2, $3);
        $verse_num++;
        if ($out->{book_id} eq 'PSA') {
            if ($chap_num eq 113) {
                $v = $verse_num;
            } elsif ($chap_num eq 115 || $chap_num eq 147) {
                # chapter continues verse numbers from prior chapter
                $verse_num = $v;
            }
        }
        if ($c != $chap_num) {
            die "[$line_no] $out->{book_id} Chapter mismatch: $c != $chap_num\n";
        } elsif ($v != $verse_num) {
            die "[$line_no] $out->{book_id} Verse hopped:  $v != $verse_num\n    $line\n";
        }
        # TODO: Add checks.
        out_verse($c,$v,$text);
    } elsif ($line =~ m{<p>9a:(\d+)\. ?([^<]+)</p>}) {  # Psalm 9a
        my ($v, $text) = ($1, $2);
        $verse_num = $v + 21;
        out_verse(9,$verse_num,$text);
    } elsif ($line =~ m{<p>\((.+)\)</p>}) {
        $out->{chapter}->[$chap_num]->{comment_after_verse}->{$verse_num} = $1;
    } elsif ($line =~ m{<p class="expl">([^<]+)</p>}) {
        my $text = $1;
        out_footnote($book_id, $chap_num, $verse_num, $text);
    } elsif (($state && $out->{book_id} =~ /^[12]ES$/) && $line =~ m{<p>([^<]+)</p>}) {
        my $text = $1;
        $text =~ s/([\.\?\:\;\,\)\]])\s(\d+)\s/$1|$2 /g;
        $text =~ s/of this temple 25 no tribute,/of this temple|25 no tribute,/;
        for my $verse (split(/\|/, $text)) {
            my $sep = $&;
            $verse_num++;
            if ($verse =~ s/^$verse_num // || $verse_num == 1) {
                out_verse($chap_num,$verse_num,$verse);
            } else {
                die "Mismatch $verse_num !~ $verse, Stopped ";
            }
        }
    } elsif ($line =~ /^<a href=/) {
        1;
    } else {
        print "| $line\n";
    }

}
print_book_file();


sub print_book_file {
    my $book_id = $out->{book_id};
    my $out_file = "$out_dir/$book_id.yaml";

    print "    Writing: $out_file\n";
    YAML::Safe::DumpFile($out_file, $out);
    $out = {};
}


sub out_footnote {
    my ($book_id, $chap_num, $verse_num, $text) = @_;

    #$out->{chapter}->[$chap_num]->{footnotes}->{$verse_num}->{raw} = $text;

    if ($text =~ s/,\s?\.\.\./..../g) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [A]\n"}
    if ($text =~ s/ \.\.\. / .... /g) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [B]\n"}
 
    if ($text =~ s/^(Of slime). (Bituminis)..../$1.... Bituminis./) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(Thou shalt not take, etc). /$1, etc, .... /) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(Concubine). (She was his lawful wife)/$1.... $2/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(Upon the wall),/$1..../) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(The Lord). (That is, an angel)/$1.... $2/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(If you sleep among the midst of lots) \((intermedios cleros), etc.\).../$1.... $2/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(The voice of my beloved): (that is, the preaching)/$1.... $2/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(As Salmana), (king of the Midianites)/$1.... $2/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(One of the Pharisees): (that is, Simon.)/$1.... $2/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(See the annotation of St. Matt. 26. 11.)$/For the poor.... $1/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(City). (Urbem)..../$1.... $2/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/^(The delights of a day): (that is, the short delights)/$1.... $2/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}


    #Or....|no temptation hath taken hold of you.... or come upon you as yet, but what is human, or incident to man.|Issue.... or a way to escape.
    #Or.... no temptation hath taken hold of you.... or come upon you as yet, but what is human, or incident to man. Issue.... or a way to escape.
    if ($text =~ s/^Or.... no temptation/Let no temptation take hold on you.... Or, no temptation hath taken hold of you,/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    if ($text =~ s/(hath taken hold of you)\.\.\.\./$1,/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [S]\n"}
    #print "AAA $text\n" if $text =~ /No temptation/i;


    if ($text =~ s/^(St. Augustine considers a great mystery)/NO_QUOTE.... $1/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [NQ]\n"}
    if ($text =~ s/^(This shows how sinful it is to intermarry)/NO_QUOTE.... $1/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [NQ]\n"}
    if ($text =~ s/^Ver. 25, 26, and 27 (shew Job’s explicit belief in his Redeemer)/NO_QUOTE.... $1/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [NQ]\n"}
    if ($text =~ s/^(Here the late Hebrew doctors divide this psalm into two)/NO_QUOTE.... $1/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [NQ]\n"}
    if ($text =~ s/^(God only is essentially true.+)$/NO_QUOTE.... $1/) { print "    $out->{book_id} ${chap_num}:$verse_num CORRECT FOOTNOTE [NQ]\n"}



    $text =~ s/(\.) (\w[\w ]+\w\.\.\.\.) /$1|$2 /g;
    #$out->{chapter}->[$chap_num]->{footnotes}->{$verse_num}->{split} = $text;

    for my $part (split(/\|/, $text)) {
        my $tmp = {};
        #$tmp->{raw} = {raw => $part};
        if ($part =~ /^(.+)\.\.\.\. (.+)$/) {
            my ($quote, $note) = ($1, $2);
            if ($quote =~ s/, etc$//) {
                $tmp->{quote_ends_in_etc} = 'true';
            }
            if ($note =~ s/\s+\S+Ibid\.//) {
                $tmp->{note_ends_in_etc} = 'true';
            }
            $tmp->{quote} = $quote;
            $tmp->{note} = $note;
            if ($note =~ /^This shows how sinful it is to intermarry/) {
                $tmp->{multiple_verses} = '1,2';
            } elsif ($note =~ /^shew Job’s explicit belief in his Redeemer/){
                $tmp->{multiple_verses} = '25,26, and 27';
            }
            push(@{$out->{chapter}->[$chap_num]->{footnotes}->{$verse_num}->{instances}}, $tmp);
        } else {
            die "${chap_num}:$verse_num -- No .... in footnote: $text";
        }
    }
}

sub out_verse {
    my ($c, $v, $text) = @_;
    #$out .= "${c}:${v}. $text\n";
    #print "VRS: $out->{book_id} $book_id ${c}:$v $text\n";
    if ($out->{book_id} eq 'MAN' || $out->{book_id} =~ /^[12]ES$/) {
        $text =~ s{(\S+)\s*\(([^)]+\d)\)(\s*)}{$1<cross_ref>$2</cross_ref>$3}g;
    }
    $out->{chapter}->[$c]->{verse}->[$v] = $text;
}

sub out_spc {
    $out .= "%$_[0]\: $_[1]\n";
}


